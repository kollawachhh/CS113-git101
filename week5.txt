Pointer

    int x = 100; >> ฐาน 10
    int a = 0144; >> ฐาน 8
    int b = 0x64; >> ฐาน 16
    printf("x = %d", x);
    printf("reference of x = %lu\n", &x); >> &x เป็นการดึงค่าจาก address
    printf("reference of x = %p\n", &x); >> %p เป็นการดึงค่าเป็น ฐาน 16

    การกำหนด array และ Pointer
    int number[] = {7, 8, 9, 10, 11}; >> กำหนดค่าให้ array
    int number[100] = {7, 8, 9, 10, 11}; 
    int number[5];
    printf("index 3 = %d\n", number[3]); >> จะแสดงเลข 10 ซึ่งอยู่ใน index ที่ 3
    printf("reference index 3 = %p\n", number[3]); >> แสดง adress ของ number indexที่ 3
    printf("reference index 0 = %p\n", number[0]); >> จะแสดง adress ของ number index 0
    printf("reference index 0 = %p\n", number); >> จะแสดง address ของ number indexที่ 0

    int *ptr = &x; >> ptr คือชื่อตัวแปร &x ค่า adress เครื่องหมาย '*' เป็นการชี้ค่าที่ลำดับของadress

    '*' dereferencing

    &x = 50; >> การเปลี่ยนค่าของ adress ไม่สามารถทำได้

    *ptr = 50; >> จะเป็นการเปลี่ยนค่าใน ลำดับadress ที่ตัวแปร ptr อยู่

    int number[] = {7, 8, 9, 10, 11};
    char input[50]; >> วนจนกว่าจะถึง '\0'
    for(int *ptr = number; ptr <= &number[4]; ptr++){
        printf("[%p] = %d\n", ptr, *ptr);
    }
    char input[50];
    int count = 0; >> นับจำนวนสตริง
    char c;
    while((c = getchar()) != '\n'){ >> รับสตริงจนกว่าผู้ใช้จะกด enter('\n')
        input[count] = c; >> เป็นการเปลี่ยนค่าแต่ละ index
        ++count;
    }
    input[count] = '\0';
    printf("input = %s", input);
    printf("%d", count);แสดงจำนวนสตริงทั้งหมด

    int a; >> จำนวนเต็ม
    char c; >> char หรืออักษรตัวเดียว
    char s[50]; >> string
    scanf("%c-%d-%s", &c, &a, s); >> เป็นการรอรับค่าโดยจะรับค่าแต่ละประเภทจะคั่นด้วยเครื่องหมาย '-'